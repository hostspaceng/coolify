name: Build & Push customized Coolify

on:
  push:
    branches: ["cicd"]
  workflow_dispatch:

jobs:
  build:
    name: Build & Push customized Coolify
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
          
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
         credentials_json: ${{ secrets.GCP_SA }}
         
      - name: Get Version
        id: version
        run: |
          VERSION=$(docker run --rm -v "$(pwd):/app" -w /app php:8.2-alpine3.16 php bootstrap/getVersion.php)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push to GCR
        run: |
          gcloud auth configure-docker
          docker buildx build \
            --push \
            --platform linux/amd64 \
            --tag gcr.io/my-bitnami-hosting/coolify:latest \
            --tag gcr.io/my-bitnami-hosting/coolify:${{ github.sha }} \
            --file docker/prod/Dockerfile .
  
  deploy:
    name: Deploy to Coolify Instance
    runs-on: ubuntu-latest
    needs: build

    steps: 

      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy New coolify Version
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.IP_ADDRESS }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Spin up new coolify containers"
            docker compose --env-file /data/coolify/source/.env -f /data/coolify/source/docker-compose.yml -f /data/coolify/source/docker-compose.prod.yml up -d --pull always --remove-orphans --force-recreate







        
